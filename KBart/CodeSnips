//reads in stations
//queries BART API, adds to local station list
//    func ReadStations_AEXML()
//    {
//
//        if let xmlPath = NSBundle.mainBundle().pathForResource("BARTStations", ofType: "xml")
//        {
//            if let data = NSData(contentsOfFile: xmlPath)
//            {
//                var error: NSError?
//                if let doc = AEXMLDocument(xmlData: data, error: &error)
//                {
//                    var parsedText = String()
//                    // parse known structure
//                    for stat in doc["root"]["stations"]["station"].all!
//                    {
//                        var stationKey = stat["abbr"].stringValue
//
//                        var newStation :Station = Station(  fromName:stat["name"].stringValue,
//                            fromAbbr:stat["abbr"].stringValue,
//                            fromLatitude:stat["gtfs_latitude"].stringValue,
//                            fromLongitude:stat["gtfs_longitude"].stringValue,
//                            fromAddress:stat["address"].stringValue,
//                            fromCity:stat["city"].stringValue,
//                            fromCounty:stat["county"].stringValue,
//                            fromState:stat["state"].stringValue,
//                            fromZipCode:stat["zipcode"].stringValue)
//
//                        self.stations[stationKey] = newStation
//                        self.stationArray.append(newStation)
//                    }
//                }
//                else
//                {
//                    let err = "description: \(error?.localizedDescription)\ninfo: \(error?.userInfo)"
//
//                    var x :Float = 4.5
//
//                    x = x+3
//
//                }
//            }
//        }
//    }

---------------------------------

//    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell
//    {
//
//        var cellIdentifier:String = "stationCell"
//        var cell:stationTableViewCell? = tableView.dequeueReusableCellWithIdentifier(cellIdentifier) as? stationTableViewCell
//        if (cell == nil)
//        {
//            var nib:Array = NSBundle.mainBundle().loadNibNamed("stationTableViewCell", owner: self, options: nil)
//            cell = nib[0] as? stationTableViewCell
//        }
//
//        // Configure the cell...
//        var stat = stationList[indexPath.row]
//
//        cell?.stationName.text = stat.name
//
//        return cell!
//    }

-----------------------------------


let url:NSURL = NSURL(string:"http://api.bart.gov/api/etd.aspx?cmd=etd&orig=\(_forStation)&key=\(BARTAPI_LIC_KEY)")!
let request:NSURLRequest = NSURLRequest(URL:url)
let queue:NSOperationQueue = NSOperationQueue()

NSURLConnection.sendAsynchronousRequest(request, queue: queue, completionHandler:
{ response, data, error in /* Your code */ })

NSURLConnection.sendAsynchronousRequest(request, queue: queue, completionHandler:
{ (response: NSURLResponse!, data: NSData!, error: NSError!) -> Void in
/* Your code */
})


--------------------------------------

class Timer {
var timer = NSTimer()
var handler: (Int) -> Void

init(duration: Int, handler: (Int) -> Void) {
self.duration = duration
self.handler = handler
self.start()
}
@objc func someMethod() {
self.handler(10)
}
}


class SecondViewController: UIViewController {

var timer: Timer = Timer(duration: 5, handler: SecondViewController.displayTimeRemaining)

class func displayTimeRemaining(counter: Int) -> Void {
println(counter)
}

---------------------------------

let critLock = NSLock()

---------------------------------

